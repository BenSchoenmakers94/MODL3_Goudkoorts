//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool
//     Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using GoldFever.GeneratedCode.Model;

namespace Model
{
	using System;
	using System.Collections.Generic;
	using System.Linq;
	using System.Text;

	public class Game
	{
	    private bool _createCycle;
	    private int _minimumInterval;
	    private int _pointsPerLoweredInterval;

	    public int BaseInterval { get { return 8; } }

	    public int GameScore
		{
		    get { return BoatManager.GameScore; }
		}

	    public CartManager CartManager
		{
			get;
			private set;
		}

		public BoatManager BoatManager
		{
			get;
			private set;
		}

		public Map Map
		{
			get;
			private set;
		}

	    public int GetDynamicInterval
	    {
	        get
	        {
	            int currentInterval = BaseInterval;
                currentInterval -=((int)GameScore /_pointsPerLoweredInterval);
	            if (currentInterval < _minimumInterval) return _minimumInterval;
	            return currentInterval;
	        }
	    }

	    public bool TryCycle()
        {
            Map.Dock.FillBoat();
            BoatManager.MoveAllMoveableObjects();
            CartManager.MoveAllMoveableObjects();

            if (_createCycle)
            {
                BoatManager.CreateNewMoveableObjects();
                CartManager.CreateNewMoveableObjects();
            }

            _createCycle = !_createCycle;
		    return !CartManager.CollisionDetected; // return DoCycle() false when a collision has occured
		}

		public void InitGame()
		{
			Map = new Map();
            Map.GenerateMap();

            BoatManager = new BoatManager();
            BoatManager.InitManager(Map.BoatWarehouse);

            CartManager = new CartManager();
            CartManager.InitManager(Map.CartWarehouses.ToArray());

		    _createCycle = true;
		    _minimumInterval = 2;
		    _pointsPerLoweredInterval = 25;
		}

		public void SwitchGate(int gateToSwitch)
		{
            if (Map.Switch[gateToSwitch - 1].MoveableObject != null) return;
		    Map.Switch.Where(switchToChange => switchToChange.Number == gateToSwitch.ToString()).First().switchGate();
		}

	    public IVisitable[,] getMap()
	    {
	        return Map.Objects;
	    }

	}
}

